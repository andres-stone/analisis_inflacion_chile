eee_24    <- EEE_EOF$eee_a_dos_anos[n_eee_eof]
eof_12    <- EEE_EOF$eof_a_un_ano[n_eee_eof]
eof_24    <- EEE_EOF$eof_a_dos_anos[n_eee_eof]
# Gráfica
plot_eee_eof <- ggplot() +
geom_line(data = EEE_EOF,
aes(x = periodo, y = eee_a_un_ano, group = 1, color = "EEE a un año")) +
geom_line(data = EEE_EOF,
aes(x = periodo, y = eee_a_dos_anos, group = 1, color = "EEE a dos años")) +
geom_line(data = EEE_EOF,
aes(x = periodo, y = eof_a_un_ano, group = 1, color = "EOF a un año")) +
geom_line(data = EEE_EOF,
aes(x = periodo, y = eof_a_dos_anos, group = 1, color = "EOF a dos años")) +
scale_color_manual("",values = c("EEE a un año"   = "chartreuse4",
"EEE a dos años" = "violetred3",
"EOF a un año"   = "royalblue4",
"EOF a dos años" = "darkgoldenrod3")) +
theme_light() +
labs(x = NULL, y = "Variación anual (%)",
title = "Expectativas de inflación en las encuestas",
subtitle = paste0("enero 2020 - diciembre 2021"),
caption  = "Fuente: Elaboración propia utilizando datos del BCCh") +
scale_x_date(limits = c(min(EEE_EOF$periodo),
max = max(EEE_EOF$periodo)),
date_breaks = "3 months") +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_line(linetype="dashed"),
panel.grid.minor.y = element_line(linetype="dashed"),
legend.position = "bottom",
legend.justification = "center",
plot.caption = element_text(hjust = 0),
plot.title = element_text(colour = "blue4", hjust = 0.5),
plot.subtitle = element_text(colour = "blue4",hjust = 0.5),
legend.title = element_text(colour = NA),
panel.background = element_rect(fill = NA),
plot.background = element_rect(fill = "white",colour = NA),
legend.background = element_rect(fill = "white"),
legend.direction = "horizontal",
legend.key = element_rect(fill="white"),
axis.text.x   = element_text(colour = "grey0"
,size = 8, angle = 90
,hjust = 1, vjust = 1));plot_eee_eof
View(EEE_EOF)
mm3 <- enero
mm3 <- "enero"
# Gráfica
plot_eee_eof <- ggplot() +
geom_line(data = EEE_EOF,
aes(x = periodo, y = eee_a_un_ano, group = 1, color = "EEE a un año")) +
geom_line(data = EEE_EOF,
aes(x = periodo, y = eee_a_dos_anos, group = 1, color = "EEE a dos años")) +
geom_line(data = EEE_EOF,
aes(x = periodo, y = eof_a_un_ano, group = 1, color = "EOF a un año")) +
geom_line(data = EEE_EOF,
aes(x = periodo, y = eof_a_dos_anos, group = 1, color = "EOF a dos años")) +
scale_color_manual("",values = c("EEE a un año"   = "chartreuse4",
"EEE a dos años" = "violetred3",
"EOF a un año"   = "royalblue4",
"EOF a dos años" = "darkgoldenrod3")) +
theme_light() +
labs(x = NULL, y = "Variación anual (%)",
title = "Expectativas de inflación en las encuestas",
subtitle = paste0("enero 2020 - ",mm3," ",yy),
caption  = "Fuente: Elaboración propia utilizando datos del BCCh") +
scale_x_date(limits = c(min(EEE_EOF$periodo),
max = max(EEE_EOF$periodo)),
date_breaks = "3 months") +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_line(linetype="dashed"),
panel.grid.minor.y = element_line(linetype="dashed"),
legend.position = "bottom",
legend.justification = "center",
plot.caption = element_text(hjust = 0),
plot.title = element_text(colour = "blue4", hjust = 0.5),
plot.subtitle = element_text(colour = "blue4",hjust = 0.5),
legend.title = element_text(colour = NA),
panel.background = element_rect(fill = NA),
plot.background = element_rect(fill = "white",colour = NA),
legend.background = element_rect(fill = "white"),
legend.direction = "horizontal",
legend.key = element_rect(fill="white"),
axis.text.x   = element_text(colour = "grey0"
,size = 8, angle = 90
,hjust = 1, vjust = 1));plot_eee_eof
plot_ipc_tpm <- ggplot() +
geom_line(data = ipc_tpm,
aes(x = Periodo, var_12_meses, group = 1, color = "IPC Total")) +
geom_line(data = ipc_tpm,
aes(x = Periodo, TPM, group = 1, color = "Tasa de Política Monetaria")) +
scale_color_manual("", values = c("IPC Total"                  = "royalblue3",
"Tasa de Política Monetaria" = "orangered3")) +
theme_light() +
labs(x = NULL, y = "Porcentaje (%)",
title = "Inflación y Tasa de Política Monetaaria",
subtitle = paste0("enero 2020 - ",mm1," ",yy),
caption = "Fuente: Elaboración propia utilizando datos del INE y del BCCh") +
scale_x_date(limits = c(min(ipc_tpm$Periodo),
max = max(ipc_tpm$Periodo)),
date_breaks = "3 months") +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_line(linetype="dashed"),
panel.grid.minor.y = element_line(linetype="dashed"),
legend.position = "bottom",
legend.justification = "center",
plot.caption = element_text(hjust = 0),
plot.title = element_text(colour = "blue4", hjust = 0.5),
plot.subtitle = element_text(colour = "blue4",hjust = 0.5),
legend.title = element_text(colour = NA),
panel.background = element_rect(fill = NA),
plot.background = element_rect(fill = "white",colour = NA),
legend.background = element_rect(fill = "white"),
legend.direction = "horizontal",
legend.key = element_rect(fill="white"),
axis.text.x   = element_text(colour = "grey0"
,size = 8, angle = 90
,hjust = 1, vjust = 1))
ggsave(
plot = plot_ipc_tpm,
filename = "graficos/pi_tpm.png",
device = "png",
dpi = "retina",
units = "cm",width = 30,height = 15
)
#  Seteo inicial
rm(list = ls())
memory.size(max = T)
# Actualizar parametros
mm1 <- "febrero"
mm2 <- "2"
mm3 <- "enero" # Mes anterior
yy  <- "2022"
# Nombre bases de datos
url <- "https://www.ine.cl/docs/default-source/%C3%ADndice-de-precios-al-consumidor/cuadros-estadisticos/base-2018/series-de-tiempo/ipc.xls.xlsx?sfvrsn=c73e33d4_10"
dest <- "datos/pi.xlsx"
download.file(url=url,destfile = dest,mode = "wb")
#url_tpm <- "https://si3.bcentral.cl/Siete/ES/Siete/Cuadro/CAP_TASA_INTERES/MN_TASA_INTERES_09/TPM_C1?cbFechaDiaria=1995&cbFrecuencia=MONTHLY&cbCalculo=NONE&cbFechaBase="
#dest_tpm <- "datos/tpm1.xlsx"
#download.file(url = url_tpm, destfile = dest_tpm, mode = "wb")
pi  <- "pi.xlsx"
tpm <- "tpm.xlsx"
EEE <- "EEE.xlsx"
EOF <- "EOF.xlsx"
# Librerias
library(tidyverse)
library(ggplot2)
library(readxl)
library(gganimate)
library(gapminder)
library(gifski)
library(plotly)
library(reshape2)
# Inflación variación anual 12 meses
pi <- read_excel(paste0("datos/",pi)) %>%
janitor::clean_names()
pi <- pi[-c(1:3),]
# d: división, g: grupo, c: clase, sc: subclase, p: producto
colnames(pi) <- c("ano", "mes", "d", "g", "c", "sc", "p", "glosa",
"ponderacion", "indice", "var_mensual", "var_acumulada",
"var_12_meses", "inc_mensual", "inc_acumulada", "inc_12_meses")
pi <- pi %>%
mutate(ponderacion = as.numeric(ponderacion),
indice      = as.numeric(indice),
var_mensual = as.numeric(var_mensual),
var_acumulada = as.numeric(var_acumulada),
var_12_meses  = as.numeric(var_12_meses),
inc_mensual   = as.numeric(inc_mensual),
inc_acumulada = as.numeric(inc_acumulada),
inc_12_meses  = as.numeric(inc_12_meses),
Periodo = as.Date(paste0(ano,"-", mes,"-", "1"), format = '%Y-%m-%d'))
ipc <- pi %>%
filter(glosa == 'IPC General')
# Tasa de Politica Monetaria Mensual
tpm <- read_excel(paste0("datos/",tpm)) %>%
janitor::clean_names()
# Tasa de Politica Monetaria Mensual
tpm <- read_excel(paste0("datos/",tpm)) %>%
janitor::clean_names()
View(tpm)
tpm <- tpm[-1,c(1:2)]
colnames(tpm) <- c('Periodo', 'TPM')
# Tasa de Politica Monetaria Mensual
tpm <- read_excel(paste0("datos/",tpm)) %>%
janitor::clean_names()
#url_tpm <- "https://si3.bcentral.cl/Siete/ES/Siete/Cuadro/CAP_TASA_INTERES/MN_TASA_INTERES_09/TPM_C1?cbFechaDiaria=1995&cbFrecuencia=MONTHLY&cbCalculo=NONE&cbFechaBase="
#dest_tpm <- "datos/tpm1.xlsx"
#download.file(url = url_tpm, destfile = dest_tpm, mode = "wb")
pi  <- "pi.xlsx"
tpm <- "tpm.xlsx"
# Tasa de Politica Monetaria Mensual
tpm <- read_excel(paste0("datos/",tpm)) %>%
janitor::clean_names()
View(tpm)
tpm <- tpm[-2,c(1:2)]
colnames(tpm) <- c('Periodo', 'TPM')
tpm <- tpm  %>%
mutate(TPM     = round(as.numeric(TPM), 2),
Periodo = as.Date(Periodo, format = '%Y-%m-%d'))
tpm <- "tpm.xlsx"
# Tasa de Politica Monetaria Mensual
tpm1 <- read_excel(paste0("datos/",tpm)) %>%
janitor::clean_names()
View(tpm1)
tpm1 <- tpm1[-c(1:2),c(1:2)]
colnames(tpm) <- c('Periodo', 'TPM')
tpm <- tpm  %>%
mutate(TPM     = round(as.numeric(TPM), 2),
Periodo = as.Date(Periodo, format = '%Y-%m-%d'))
colnames(tpm1) <- c('Periodo', 'TPM')
#  Seteo inicial
rm(list = ls())
memory.size(max = T)
# Actualizar parametros
mm1 <- "febrero"
mm2 <- "2"
mm3 <- "enero" # Mes anterior
yy  <- "2022"
# Nombre bases de datos
url <- "https://www.ine.cl/docs/default-source/%C3%ADndice-de-precios-al-consumidor/cuadros-estadisticos/base-2018/series-de-tiempo/ipc.xls.xlsx?sfvrsn=c73e33d4_10"
dest <- "datos/pi.xlsx"
download.file(url=url,destfile = dest,mode = "wb")
#url_tpm <- "https://si3.bcentral.cl/Siete/ES/Siete/Cuadro/CAP_TASA_INTERES/MN_TASA_INTERES_09/TPM_C1?cbFechaDiaria=1995&cbFrecuencia=MONTHLY&cbCalculo=NONE&cbFechaBase="
#dest_tpm <- "datos/tpm1.xlsx"
#download.file(url = url_tpm, destfile = dest_tpm, mode = "wb")
pi  <- "pi.xlsx"
tpm <- "tpm.xlsx"
EEE <- "EEE.xlsx"
EOF <- "EOF.xlsx"
# Librerias
library(tidyverse)
library(ggplot2)
library(readxl)
library(gganimate)
library(gapminder)
library(gifski)
library(plotly)
library(reshape2)
# Inflación variación anual 12 meses
pi <- read_excel(paste0("datos/",pi)) %>%
janitor::clean_names()
pi <- pi[-c(1:3),]
# d: división, g: grupo, c: clase, sc: subclase, p: producto
colnames(pi) <- c("ano", "mes", "d", "g", "c", "sc", "p", "glosa",
"ponderacion", "indice", "var_mensual", "var_acumulada",
"var_12_meses", "inc_mensual", "inc_acumulada", "inc_12_meses")
pi <- pi %>%
mutate(ponderacion = as.numeric(ponderacion),
indice      = as.numeric(indice),
var_mensual = as.numeric(var_mensual),
var_acumulada = as.numeric(var_acumulada),
var_12_meses  = as.numeric(var_12_meses),
inc_mensual   = as.numeric(inc_mensual),
inc_acumulada = as.numeric(inc_acumulada),
inc_12_meses  = as.numeric(inc_12_meses),
Periodo = as.Date(paste0(ano,"-", mes,"-", "1"), format = '%Y-%m-%d'))
ipc <- pi %>%
filter(glosa == 'IPC General')
# Tasa de Politica Monetaria Mensual
tpm <- read_excel(paste0("datos/",tpm)) %>%
janitor::clean_names()
tpm <- tpm[-c(1:2),c(1:2)]
colnames(tpm) <- c('Periodo', 'TPM')
tpm <- tpm  %>%
mutate(TPM     = round(as.numeric(TPM), 2),
Periodo = as.Date(Periodo, format = '%Y-%m-%d'))
# Uniendo bases desde el periodo que se encuentran y hasta donde llegan
ipc_tpm <- ipc %>%
inner_join(tpm, by = c("Periodo")) %>%
mutate(Y = as.numeric(ano),
m = as.numeric(mes)) %>%
select(-c(ano, mes)) %>%
filter(Periodo > '2020-01-01')
# Asignando show_time & reveal_time
ipc_tpm <- ipc_tpm  %>%
mutate(show_time = ifelse((Y == 2020 & m %in% c(3:12))
| Y == 2021, 15, 1),
reveal_time = cumsum(show_time))
# Reshape de base pi_tpm
ipc_tpm_long <- ipc_tpm %>%
select(Periodo, var_12_meses, TPM, reveal_time) %>%
melt(id.vars = c("Periodo", "reveal_time"))
#ipc_tpm_long$Periodo <- gsub('T00:00:00.0000000','', pi_tpm_long$Periodo)
#pi_tpm_long$Y       <- as.numeric(substr(pi_tpm_long$Periodo,1,4))
#pi_tpm_long$m       <- as.numeric(substr(pi_tpm_long$Periodo, 6,7))
#pi_tpm_long$Periodo <- as.Date(pi_tpm_long$Periodo, format = '%Y-%m-%d')
# Datos
l_pi_tpm <- ipc_tpm %>%
filter(Y == yy & m == mm2)
l_pi  <- l_pi_tpm$var_12_meses
l_tpm <- l_pi_tpm$TPM
l_ipc_m <- l_pi_tpm$var_mensual
# Llave
ll_pi  <- ifelse(l_pi > 0, "aumentó", "disminuyó")
# Valor absoluto para llave
abs_l_pi  <- abs(l_pi)
abs_l_tpm <- abs(l_tpm)
View(tpm)
#  Seteo inicial
rm(list = ls())
memory.size(max = T)
# Actualizar parametros
mm1 <- "febrero"
mm2 <- "2"
mm3 <- "enero" # Mes anterior
yy  <- "2022"
# Nombre bases de datos
url <- "https://www.ine.cl/docs/default-source/%C3%ADndice-de-precios-al-consumidor/cuadros-estadisticos/base-2018/series-de-tiempo/ipc.xls.xlsx?sfvrsn=c73e33d4_10"
dest <- "datos/pi.xlsx"
download.file(url=url,destfile = dest,mode = "wb")
#url_tpm <- "https://si3.bcentral.cl/Siete/ES/Siete/Cuadro/CAP_TASA_INTERES/MN_TASA_INTERES_09/TPM_C1?cbFechaDiaria=1995&cbFrecuencia=MONTHLY&cbCalculo=NONE&cbFechaBase="
#dest_tpm <- "datos/tpm1.xlsx"
#download.file(url = url_tpm, destfile = dest_tpm, mode = "wb")
pi  <- "pi.xlsx"
tpm <- "tpm.xlsx"
EEE <- "EEE.xlsx"
EOF <- "EOF.xlsx"
# Librerias
library(tidyverse)
library(ggplot2)
library(readxl)
library(gganimate)
library(gapminder)
library(gifski)
library(plotly)
library(reshape2)
# Inflación variación anual 12 meses
pi <- read_excel(paste0("datos/",pi)) %>%
janitor::clean_names()
# Inflación variación anual 12 meses
pi <- read_excel(paste0("datos/",pi)) %>%
janitor::clean_names()
ipc <- pi %>%
filter(glosa == 'IPC General')
ipc <- pi %>%
filter(glosa == 'IPC General')
View(pi)
#  Seteo inicial
rm(list = ls())
memory.size(max = T)
# Actualizar parametros
mm1 <- "febrero"
mm2 <- "2"
mm3 <- "enero" # Mes anterior
yy  <- "2022"
# Nombre bases de datos
url <- "https://www.ine.cl/docs/default-source/%C3%ADndice-de-precios-al-consumidor/cuadros-estadisticos/base-2018/series-de-tiempo/ipc.xls.xlsx?sfvrsn=c73e33d4_10"
dest <- "datos/pi.xlsx"
download.file(url=url,destfile = dest,mode = "wb")
#url_tpm <- "https://si3.bcentral.cl/Siete/ES/Siete/Cuadro/CAP_TASA_INTERES/MN_TASA_INTERES_09/TPM_C1?cbFechaDiaria=1995&cbFrecuencia=MONTHLY&cbCalculo=NONE&cbFechaBase="
#dest_tpm <- "datos/tpm1.xlsx"
#download.file(url = url_tpm, destfile = dest_tpm, mode = "wb")
pi  <- "pi.xlsx"
tpm <- "tpm.xlsx"
EEE <- "EEE.xlsx"
EOF <- "EOF.xlsx"
# Librerias
library(tidyverse)
library(ggplot2)
library(readxl)
library(gganimate)
library(gapminder)
library(gifski)
library(plotly)
library(reshape2)
# Inflación variación anual 12 meses
pi <- read_excel(paste0("datos/",pi)) %>%
janitor::clean_names()
View(pi)
pi <- pi[-c(1:3),]
# d: división, g: grupo, c: clase, sc: subclase, p: producto
colnames(pi) <- c("ano", "mes", "d", "g", "c", "sc", "p", "glosa",
"ponderacion", "indice", "var_mensual", "var_acumulada",
"var_12_meses", "inc_mensual", "inc_acumulada", "inc_12_meses")
pi <- pi %>%
mutate(ponderacion = as.numeric(ponderacion),
indice      = as.numeric(indice),
var_mensual = as.numeric(var_mensual),
var_acumulada = as.numeric(var_acumulada),
var_12_meses  = as.numeric(var_12_meses),
inc_mensual   = as.numeric(inc_mensual),
inc_acumulada = as.numeric(inc_acumulada),
inc_12_meses  = as.numeric(inc_12_meses),
Periodo = as.Date(paste0(ano,"-", mes,"-", "1"), format = '%Y-%m-%d'))
ipc <- pi %>%
filter(glosa == 'IPC General')
# Tasa de Politica Monetaria Mensual
tpm <- read_excel(paste0("datos/",tpm)) %>%
janitor::clean_names()
View(tpm)
tpm <- tpm[-c(1:2),c(1:2)]
colnames(tpm) <- c('Periodo', 'TPM')
tpm <- tpm  %>%
mutate(TPM     = round(as.numeric(TPM), 2),
Periodo = as.Date(Periodo, format = '%Y-%m-%d'))
pi  <- "pi.xlsx"
# Tasa de Politica Monetaria Mensual
tpm <- read_excel(paste0("datos/",tpm)) %>%
janitor::clean_names()
# Tasa de Politica Monetaria Mensual
tpm <- read_excel(paste0("datos/",tpm)) %>%
janitor::clean_names()
tpm <- "tpm.xlsx"
# Tasa de Politica Monetaria Mensual
tpm <- read_excel(paste0("datos/",tpm)) %>%
janitor::clean_names()
View(tpm)
tpm <- tpm[-c(1:2),c(1:2)]
colnames(tpm) <- c('Periodo', 'TPM')
f <- paste("01",mm2,yy,sep="-")
f <- paste("01",ifelse(mm2<10,paste0("0",mm2),mm2),yy,sep="-")
f <- paste("01",ifelse(mm2>10,paste0("0",mm2),mm2),yy,sep="-")
i <- "01-02-1997"
f <- paste("01",ifelse(mm2>10,paste0("0",mm2),mm2),yy,sep="-")
f <- paste("01",ifelse(mm2>10,paste0("0",mm2+1),mm2+1),yy,sep="-")
View(tpm)
mm4 <- 3 # Mes TPM
f <- paste("01",ifelse(mm2>10,paste0("0",mm4),mm4),yy,sep="-")
Periodo <- seq(i,f,by = "month")
Periodo <- seq(i,f,by = "1 month")
Periodo <- seq(i,f,1)
library(lubridate)
meses <- ((ymd(i) %--% ymd(f)) / months(1) )
#  Seteo inicial
rm(list = ls())
memory.size(max = T)
# Actualizar parametros
mm1 <- "febrero"
mm2 <- "2"
mm3 <- "enero" # Mes anterior
yy  <- "2022"
# Nombre bases de datos
url <- "https://www.ine.cl/docs/default-source/%C3%ADndice-de-precios-al-consumidor/cuadros-estadisticos/base-2018/series-de-tiempo/ipc.xls.xlsx?sfvrsn=c73e33d4_10"
dest <- "datos/pi.xlsx"
download.file(url=url,destfile = dest,mode = "wb")
#url_tpm <- "https://si3.bcentral.cl/Siete/ES/Siete/Cuadro/CAP_TASA_INTERES/MN_TASA_INTERES_09/TPM_C1?cbFechaDiaria=1995&cbFrecuencia=MONTHLY&cbCalculo=NONE&cbFechaBase="
#dest_tpm <- "datos/tpm1.xlsx"
#download.file(url = url_tpm, destfile = dest_tpm, mode = "wb")
pi  <- "pi.xlsx"
tpm <- "tpm.xlsx"
EEE <- "EEE.xlsx"
EOF <- "EOF.xlsx"
# Librerias
library(tidyverse)
library(ggplot2)
library(readxl)
library(gganimate)
library(gapminder)
library(gifski)
library(plotly)
library(reshape2)
# Inflación variación anual 12 meses
pi <- read_excel(paste0("datos/",pi)) %>%
janitor::clean_names()
pi <- pi[-c(1:3),]
# d: división, g: grupo, c: clase, sc: subclase, p: producto
colnames(pi) <- c("ano", "mes", "d", "g", "c", "sc", "p", "glosa",
"ponderacion", "indice", "var_mensual", "var_acumulada",
"var_12_meses", "inc_mensual", "inc_acumulada", "inc_12_meses")
pi <- pi %>%
mutate(ponderacion = as.numeric(ponderacion),
indice      = as.numeric(indice),
var_mensual = as.numeric(var_mensual),
var_acumulada = as.numeric(var_acumulada),
var_12_meses  = as.numeric(var_12_meses),
inc_mensual   = as.numeric(inc_mensual),
inc_acumulada = as.numeric(inc_acumulada),
inc_12_meses  = as.numeric(inc_12_meses),
Periodo = as.Date(paste0(ano,"-", mes,"-", "1"), format = '%Y-%m-%d'))
ipc <- pi %>%
filter(glosa == 'IPC General')
# Tasa de Politica Monetaria Mensual
tpm <- read_excel(paste0("datos/",tpm)) %>%
janitor::clean_names()
tpm <- tpm[-z,c(1:2)]
1
# Tasa de Politica Monetaria Mensual
tpm <- read_excel(paste0("datos/",tpm)) %>%
janitor::clean_names()
tpm <- tpm[-1,c(1:2)]
colnames(tpm) <- c('Periodo', 'TPM')
# Inflación variación anual 12 meses
pi <- read_excel(paste0("datos/",pi)) %>%
janitor::clean_names()
tpm <- tpm  %>%
mutate(TPM     = round(as.numeric(TPM), 2),
Periodo = as.Date(Periodo, format = '%Y-%m-%d'))
# Uniendo bases desde el periodo que se encuentran y hasta donde llegan
ipc_tpm <- ipc %>%
inner_join(tpm, by = c("Periodo")) %>%
mutate(Y = as.numeric(ano),
m = as.numeric(mes)) %>%
select(-c(ano, mes)) %>%
filter(Periodo > '2020-01-01')
# Asignando show_time & reveal_time
ipc_tpm <- ipc_tpm  %>%
mutate(show_time = ifelse((Y == 2020 & m %in% c(3:12))
| Y == 2021, 15, 1),
reveal_time = cumsum(show_time))
# Reshape de base pi_tpm
ipc_tpm_long <- ipc_tpm %>%
select(Periodo, var_12_meses, TPM, reveal_time) %>%
melt(id.vars = c("Periodo", "reveal_time"))
# Datos
l_pi_tpm <- ipc_tpm %>%
filter(Y == yy & m == mm2)
l_pi  <- l_pi_tpm$var_12_meses
l_tpm <- l_pi_tpm$TPM
l_ipc_m <- l_pi_tpm$var_mensual
# Llave
ll_pi  <- ifelse(l_pi > 0, "aumentó", "disminuyó")
