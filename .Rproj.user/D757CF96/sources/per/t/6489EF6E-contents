---
title: "Tasa de política monetaria e Inflación"
subtitle: "Andrés Durán S."
author: "duransalgado.andres@gmail.com"
date: '<span style = "font-size: 70%;">`r format(Sys.Date(), format = "%A %d de %B, %Y")`</span>'
output: 
  html_document:
    toc: true
    toc_float: true
    toc_collapsed: true
    toc_depth: 4
    number_sections: true
    theme: lumen
    df_print: paged
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

```{r echo=FALSE, results=FALSE, message=FALSE, warning=FALSE}
#  Seteo inicial 
rm(list = ls())
memory.size(max = T)

# Actualizar parametros
mm1 <- "febrero"
mm2 <- "2"
mm3 <- "enero" # Mes anterior
yy  <- "2022"

# Nombre bases de datos
url <- "https://www.ine.cl/docs/default-source/%C3%ADndice-de-precios-al-consumidor/cuadros-estadisticos/base-2018/series-de-tiempo/ipc.xls.xlsx?sfvrsn=c73e33d4_10"
dest <- "datos/pi.xlsx"
download.file(url=url,destfile = dest,mode = "wb")

#url_tpm <- "https://si3.bcentral.cl/Siete/ES/Siete/Cuadro/CAP_TASA_INTERES/MN_TASA_INTERES_09/TPM_C1?cbFechaDiaria=1995&cbFrecuencia=MONTHLY&cbCalculo=NONE&cbFechaBase="
#dest_tpm <- "datos/tpm1.xlsx"
#download.file(url = url_tpm, destfile = dest_tpm, mode = "wb")
pi  <- "pi.xlsx"
tpm <- "tpm.xlsx"
EEE <- "EEE.xlsx"
EOF <- "EOF.xlsx"
```

```{r echo=FALSE, results=FALSE, message=FALSE, warning=FALSE}
# Librerias
library(tidyverse)
library(ggplot2)
library(readxl)
library(gganimate)
library(gapminder)
library(gifski)
library(plotly)
library(reshape2)
```

```{r echo=FALSE, results=FALSE, message=FALSE, warning=FALSE}
# Inflación variación anual 12 meses
pi <- read_excel(paste0("datos/",pi)) %>%
  janitor::clean_names()
pi <- pi[-c(1:3),]
# d: división, g: grupo, c: clase, sc: subclase, p: producto
colnames(pi) <- c("ano", "mes", "d", "g", "c", "sc", "p", "glosa",
                  "ponderacion", "indice", "var_mensual", "var_acumulada",
                  "var_12_meses", "inc_mensual", "inc_acumulada", "inc_12_meses")

pi <- pi %>%
  mutate(ponderacion = as.numeric(ponderacion),
         indice      = as.numeric(indice),
         var_mensual = as.numeric(var_mensual),
         var_acumulada = as.numeric(var_acumulada),
         var_12_meses  = as.numeric(var_12_meses),
         inc_mensual   = as.numeric(inc_mensual),
         inc_acumulada = as.numeric(inc_acumulada),
         inc_12_meses  = as.numeric(inc_12_meses),
         Periodo = as.Date(paste0(ano,"-", mes,"-", "1"), format = '%Y-%m-%d'))

ipc <- pi %>% 
  filter(glosa == 'IPC General')

# Tasa de Politica Monetaria Mensual
tpm <- read_excel(paste0("datos/",tpm)) %>%
  janitor::clean_names()
tpm <- tpm[-1,c(1:2)]
colnames(tpm) <- c('Periodo', 'TPM')

tpm <- tpm  %>%
  mutate(TPM     = round(as.numeric(TPM), 2),
         Periodo = as.Date(Periodo, format = '%Y-%m-%d'))

# Uniendo bases desde el periodo que se encuentran y hasta donde llegan
ipc_tpm <- ipc %>% 
  inner_join(tpm, by = c("Periodo")) %>%
  mutate(Y = as.numeric(ano),
         m = as.numeric(mes)) %>%
  select(-c(ano, mes)) %>%
  filter(Periodo > '2020-01-01')

# Asignando show_time & reveal_time
ipc_tpm <- ipc_tpm  %>% 
  mutate(show_time = ifelse((Y == 2020 & m %in% c(3:12)) 
                            | Y == 2021, 15, 1),
         reveal_time = cumsum(show_time))

# Reshape de base pi_tpm
ipc_tpm_long <- ipc_tpm %>%
  select(Periodo, var_12_meses, TPM, reveal_time) %>%
  melt(id.vars = c("Periodo", "reveal_time"))

#ipc_tpm_long$Periodo <- gsub('T00:00:00.0000000','', pi_tpm_long$Periodo)
#pi_tpm_long$Y       <- as.numeric(substr(pi_tpm_long$Periodo,1,4))
#pi_tpm_long$m       <- as.numeric(substr(pi_tpm_long$Periodo, 6,7))
#pi_tpm_long$Periodo <- as.Date(pi_tpm_long$Periodo, format = '%Y-%m-%d')

# Datos
l_pi_tpm <- ipc_tpm %>%
  filter(Y == yy & m == mm2)
l_pi  <- l_pi_tpm$var_12_meses
l_tpm <- l_pi_tpm$TPM
l_ipc_m <- l_pi_tpm$var_mensual

# Llave
ll_pi  <- ifelse(l_pi > 0, "aumentó", "disminuyó")

# Valor absoluto para llave
abs_l_pi  <- abs(l_pi)
abs_l_tpm <- abs(l_tpm)
```

# Evolución del IPC y de la TPM

En `r mm1` de `r yy` el índice de precios al consumidor (IPC) anotó una variación mensual de `r l_ipc_m`%, y un `r ll_pi` a doce meses de `r l_pi`%, mientras que la tasa de interés de política monetaria se ubica en `r l_tpm`%.

```{r echo=FALSE, results=FALSE, message=FALSE, warning=FALSE}
plot_ipc_tpm <- ggplot() + 
  geom_line(data = ipc_tpm,
            aes(x = Periodo, var_12_meses, group = 1, color = "IPC Total")) + 
  geom_line(data = ipc_tpm,
            aes(x = Periodo, TPM, group = 1, color = "Tasa de Política Monetaria")) +
  scale_color_manual("", values = c("IPC Total"                  = "royalblue3",
                                    "Tasa de Política Monetaria" = "orangered3")) + 
  theme_light() + 
  labs(x = NULL, y = "Porcentaje (%)",
       title = "Inflación y Tasa de Política Monetaaria",
       subtitle = paste0("enero 2020 - ",mm1," ",yy),
       caption = "Fuente: Elaboración propia utilizando datos del INE y del BCCh") + 
  scale_x_date(limits = c(min(ipc_tpm$Periodo),
                          max = max(ipc_tpm$Periodo)),
               date_breaks = "3 months") + 
  theme(panel.grid.major.x = element_blank(),
        panel.grid.minor.x = element_blank(),
        panel.grid.major.y = element_line(linetype="dashed"),
        panel.grid.minor.y = element_line(linetype="dashed"),
        legend.position = "bottom",
        legend.justification = "center",
        plot.caption = element_text(hjust = 0),
        plot.title = element_text(colour = "blue4", hjust = 0.5),
        plot.subtitle = element_text(colour = "blue4",hjust = 0.5),
        legend.title = element_text(colour = NA),
        panel.background = element_rect(fill = NA),
        plot.background = element_rect(fill = "white",colour = NA),
        legend.background = element_rect(fill = "white"),
        legend.direction = "horizontal",
        legend.key = element_rect(fill="white"),
        axis.text.x   = element_text(colour = "grey0"
                                      ,size = 8, angle = 90
                                      ,hjust = 1, vjust = 1))


ggsave(
  plot = plot_ipc_tpm,
  filename = "graficos/pi_tpm.png",
  device = "png",
  dpi = "retina",
  units = "cm",width = 30,height = 15
)
```

```{r echo=FALSE}
#knitr::include_graphics("graficos/pi_tpm.png")
plot_ipc_tpm
```

```{r echo=FALSE, results=FALSE, message=FALSE, warning=FALSE}
# Informacion último mes
d_ipc <- pi %>%
  mutate(ano = as.numeric(ano),
         mes = as.numeric(mes)) %>%
  filter(ano == yy & mes == mm2) %>%
  filter(glosa == "ALIMENTOS Y BEBIDAS NO ALCOHÓLICAS" |
           glosa == "BEBIDAS ALCOHÓLICAS Y TABACO" | 
           glosa == "VESTUARIO Y CALZADO" |
           glosa == "VIVIENDA Y SERVICIOS BÁSICOS" |
           glosa == "EQUIPAMIENTO Y MANTENCIÓN DEL HOGAR" |
           glosa == "SALUD" |
           glosa == "TRANSPORTE" |
           glosa == "COMUNICACIONES" |
           glosa == "RECREACIÓN Y CULTURA" |
           glosa == "EDUCACIÓN" |
           glosa == "RESTAURANTES Y HOTELES" |
           glosa == "BIENES Y SERVICIOS DIVERSOS") %>%
  mutate(glosa = case_when(glosa == "ALIMENTOS Y BEBIDAS NO ALCOHÓLICAS" ~ "alimentos y bebidas no alcohólicas",
                           glosa == "BEBIDAS ALCOHÓLICAS Y TABACO" ~ "bebidas alcohólicas y tabaco",
                           glosa == "VESTUARIO Y CALZADO" ~ "vestuario y calzado",
                           glosa == "VIVIENDA Y SERVICIOS BÁSICOS" ~ "vivienda y servicios básicos",
                           glosa == "EQUIPAMIENTO Y MANTENCIÓN DEL HOGAR" ~ "equipamiento y mantención del hogar",
                           glosa == "SALUD" ~ "salud",
                           glosa == "TRANSPORTE" ~ "transporte",
                           glosa == "COMUNICACIONES" ~ "comunicaciones",
                           glosa == "RECREACIÓN Y CULTURA" ~ "recreacion y cultura",
                           glosa == "EDUCACIÓN" ~ "educación",
                           glosa == "RESTAURANTES Y HOTELES" ~ "restaurantes y hoteles",
                           glosa == "BIENES Y SERVICIOS DIVERSOS" ~ "bienes y servicios diversos"))

inc_pos <- sum(d_ipc$inc_acumulada > 0, na.rm = TRUE)
inc_neg <- sum(d_ipc$inc_acumulada < 0, na.rm = TRUE)
ll_inc_pos <- case_when(inc_pos == "1" ~ "una", inc_pos == "2" ~ "dos",
                        inc_pos == "3" ~ "tres", inc_pos == "4" ~ "cuatro",
                        inc_pos == "5" ~ "cinco", inc_pos == "6" ~ "seis",
                        inc_pos == "7" ~ "siete", inc_pos == "8" ~ "ocho",
                        inc_pos == "9" ~ "nueve", inc_pos == "9" ~ "nueve",
                        inc_pos == "11" ~ "once", inc_pos == "12" ~ "doce")
ll_inc_neg <- case_when(inc_neg == "1" ~ "una", inc_neg == "2" ~ "dos",
                        inc_neg == "3" ~ "tres", inc_neg == "4" ~ "cuatro",
                        inc_neg == "5" ~ "cinco", inc_neg == "6" ~ "seis",
                        inc_neg == "7" ~ "siete", inc_neg == "8" ~ "ocho",
                        inc_neg == "9" ~ "nueve", inc_neg == "9" ~ "nueve",
                        inc_neg == "11" ~ "once", inc_neg == "12" ~ "doce")

sort_d_ipc <- d_ipc %>%
  arrange(desc(inc_mensual))
glosas <- sort_d_ipc$glosa
glosa1 <- glosas[1]
glosa2 <- glosas[2]

var_mensual  <- sort_d_ipc$var_mensual
var_mensual1 <- var_mensual[1]
var_mensual2 <- var_mensual[2]

pp  <- sort_d_ipc$inc_mensual
pp1 <- pp[1]
pp2 <- pp[2]

# REVISAR
inc_tot_pos <- ifelse(sort_d_ipc$inc_mensual > 0, sum(sort_d_ipc$inc_mensual), 0)
inc_tot     <- inc_tot_pos - pp1 - pp2
inc_tot     <- inc_tot[12]
inc_tot     <- inc_tot*-1
```


# Variaciones e Incidencias por división

En `r mm1`, `r ll_inc_pos` de las doce divisiones que conforman la canasta del IPC aportaron incidentias positivas en la variación mensual del índice y `r ll_inc_neg` presentarón incidencia negativa. Entre las divisiones con aumentos de sus precios destacó `r glosa1` (`r var_mensual1`) con `r pp1` puntos porcentuales (pp.) y `r glosa2` (`r var_mensual2`) con `r pp2`pp. Las restantes divisiones influyeron positivamente contribuyeron con `r inc_tot`pp., en conjunto.

```{r echo=FALSE,  warning=FALSE}
# Presentando tabla
tab <- d_ipc %>%
  select(glosa, ponderacion, indice, var_mensual, var_acumulada, var_12_meses, inc_mensual, inc_12_meses) %>%
  knitr::kable(col.names = c("División", "Ponderación", "Índice", "Variación mensual", 
                             "Variación acumulada", "Variación 12 meses", 
                             "Incidencia mensual", "Incidencia 12 meses"),
               align = "lccccccc",
               caption = paste0("IPC Total ",mm1," ",yy),
               "html") #%>%
  #kableExtra::row_spec(1, bold = T, italic = T)
tab
```

```{r echo=FALSE, results=FALSE, message=FALSE, warning=FALSE}
# Divisiones ----
# 1° division con mayor inc. acumulada
d1 <- d_ipc %>%
  filter(glosa == glosa1)
d1 <- d1$d

# 2° division con mayor inc. acumulada
d2 <- d_ipc %>%
  filter(glosa == glosa2)
d2 <- d2$d

# 3° division con mayor inc. acumulada
d_ipc <- d_ipc %>%
  arrange(desc(inc_mensual))
glosa3 <- d_ipc$glosa[3]
d3 <- d_ipc %>%
  filter(glosa == glosa3)
d3 <- d3$d

# Variación x división ----
div_1 <- pi %>%
  filter(ano == yy & mes == mm2) %>%
  filter(d == d1) %>%
  filter(is.na(sc) & is.na(p) & !is.na(c)) %>%
  arrange(desc(abs(inc_mensual)))
glosa11 <- tolower(div_1$glosa[1])
glosa12 <- tolower(div_1$glosa[2])
var_m_11 <- div_1$var_mensual[1]
var_m_12 <- div_1$var_mensual[2]
inc_m_11 <- div_1$inc_mensual[1]
inc_m_12 <- div_1$inc_mensual[2]
n1 <- div_1 %>% summarise(n = n_distinct(glosa))
n1 <- n1$n[1]
n11 <- div_1 %>% filter(var_mensual > 0) %>% summarise(n = n_distinct(glosa))
n11 <- n11$n[1]
r11 <- n11/n1
ll_11 <- ifelse(r11 >= .5, "aumentos", "disminuciones")
####
div_2 <- pi %>%
  filter(ano == yy & mes == mm2) %>%
  filter(d == d2) %>%
  filter(is.na(sc) & is.na(p) & !is.na(c)) %>%
  arrange(desc(abs(inc_mensual)))
glosa21 <- tolower(div_2$glosa[1])
glosa22 <- tolower(div_2$glosa[2])
var_m_21 <- div_2$var_mensual[1]
var_m_22 <- div_2$var_mensual[2]
inc_m_21 <- div_2$inc_mensual[1]
inc_m_22 <- div_2$inc_mensual[2]
n2 <- div_2 %>% summarise(n = n_distinct(glosa))
n2 <- n2$n[1]
n21 <- div_2 %>% filter(var_mensual > 0) %>% summarise(n = n_distinct(glosa))
n21 <- n21$n[1]
r21 <- n21/n2
ll_21 <- ifelse(r11 >= .5, "alzas", "caídas")
####
div_3 <- pi %>%
  filter(ano == yy & mes == mm2) %>%
  filter(d == d3) %>%
  filter(is.na(sc) & is.na(p) & !is.na(c)) %>%
  arrange(desc(abs(inc_mensual)))
glosa31 <- tolower(div_3$glosa[1])
glosa32 <- tolower(div_3$glosa[2])
var_m_31 <- div_3$var_mensual[1]
var_m_32 <- div_3$var_mensual[2]
inc_m_31 <- div_3$inc_mensual[1]
inc_m_32 <- div_3$inc_mensual[2]
n3 <- div_3 %>% summarise(n = n_distinct(glosa))
n3 <- n3$n[1]
n31 <- div_3 %>% filter(var_mensual > 0) %>% summarise(n = n_distinct(glosa))
n31 <- n31$n[1]
r31 <- n11/n1
ll_31 <- ifelse(r11 >= .5, "aumentos", "disminuciones")
```

# Divisiones

## División `r d1` de `r glosa1`

`r glosa1` anoto `r ll_11` mensuales en `r n11` de sus `r n1` clases. La más importante fue `r glosa11`(`r var_m_11`%) que incidió `r inc_m_11`pp., mientras que `r glosa12`(`r var_m_12`%) contribuyó `r inc_m_12`pp.

## División `r d2` de `r glosa2`

`r glosa2` consignó `r ll_21` mensuales en `r n21` de sus `r n2` clases. La más importante fue `r glosa21`(`r var_m_21`%) que aportó `r inc_m_21`pp., seguida de `r glosa22`(`r var_m_22`%) con `r inc_m_22`pp.

## División `r d3` de `r glosa3`

`r glosa3`registró `r ll_31` mensuales en `r n31` de sus `r n3` clases. La más importante fue `r glosa31`(`r var_m_31`%) que aportó `r inc_m_31`pp., seguida de `r glosa32`(`r var_m_32`%) con `r inc_m_32`pp.


# Productos

```{r echo=FALSE, results=FALSE, message=FALSE, warning=FALSE}
# IPC, IPC sin volatiles, IPCSAE
```


# Indicadores de inflación

```{r echo=FALSE, results=FALSE, message=FALSE, warning=FALSE}
# Encuesta de Expectativas Económicas
EEE <- read_excel(paste0("datos/",EEE))
EEE <- EEE[-1,c(1:3)]
colnames(EEE) <- c("Periodo", "EEE a un año", "EEE a dos años")
# Encuesta de Operadores Financieros
EOF <- read_excel(paste0("datos/",EOF))
EOF <- EOF[-1,c(1:3)]
colnames(EOF) <- c("Periodo", "EOF a un año", "EOF a dos años")
# Uniendo las bases desde que se encuentran
EEE_EOF <- EEE %>%
  inner_join(EOF, by = c("Periodo")) %>%
  janitor::clean_names() %>%
  mutate(periodo = as.Date(periodo, format = '%Y-%m-%d'),
         eee_a_un_ano   = round(as.numeric(eee_a_un_ano),1),
         eee_a_dos_anos = round(as.numeric(eee_a_dos_anos),1),
         eof_a_un_ano   = round(as.numeric(eof_a_un_ano),1),
         eof_a_dos_anos = round(as.numeric(eof_a_dos_anos),1)) %>%
  filter(periodo >= '2020-01-01')
n_eee_eof <- EEE_EOF %>% summarise(n = n_distinct(periodo))
n_eee_eof <- n_eee_eof$n
eee_12    <- EEE_EOF$eee_a_un_ano[n_eee_eof]
eee_24    <- EEE_EOF$eee_a_dos_anos[n_eee_eof]
eof_12    <- EEE_EOF$eof_a_un_ano[n_eee_eof]
eof_24    <- EEE_EOF$eof_a_dos_anos[n_eee_eof]
```

# Expectativas de inflación en las encuestas (*)

La Encuesta de Expectativas Económica (EEE) de diciembre, la Encuesta de Operadores Financieros (EOF) y los seguros de inflación la ubican entre `r eee_12`% y `r eof_12`% a doce meses. A dos años plazo, las compensaciones inflacionarias y las encuestas -EEE y EOF- se ubicaron hasta cifras entre `r eee_24`% y `r eof_24`%.

```{r echo=FALSE, results=FALSE, message=FALSE, warning=FALSE}
# Gráfica
plot_eee_eof <- ggplot() +
  geom_line(data = EEE_EOF,
            aes(x = periodo, y = eee_a_un_ano, group = 1, color = "EEE a un año")) +
  geom_line(data = EEE_EOF,
            aes(x = periodo, y = eee_a_dos_anos, group = 1, color = "EEE a dos años")) +
  geom_line(data = EEE_EOF,
            aes(x = periodo, y = eof_a_un_ano, group = 1, color = "EOF a un año")) +
  geom_line(data = EEE_EOF,
            aes(x = periodo, y = eof_a_dos_anos, group = 1, color = "EOF a dos años")) +
  scale_color_manual("",values = c("EEE a un año"   = "chartreuse4",
                                   "EEE a dos años" = "violetred3",
                                   "EOF a un año"   = "royalblue4",
                                   "EOF a dos años" = "darkgoldenrod3")) +
  theme_light() + 
  labs(x = NULL, y = "Variación anual (%)",
       title = "Expectativas de inflación en las encuestas",
       subtitle = paste0("enero 2020 - ",mm3," ",yy),
       caption  = "Fuente: Elaboración propia utilizando datos del BCCh") + 
  scale_x_date(limits = c(min(EEE_EOF$periodo),
                          max = max(EEE_EOF$periodo)),
               date_breaks = "3 months") + 
  theme(panel.grid.major.x = element_blank(),
        panel.grid.minor.x = element_blank(),
        panel.grid.major.y = element_line(linetype="dashed"),
        panel.grid.minor.y = element_line(linetype="dashed"),
        legend.position = "bottom",
        legend.justification = "center",
        plot.caption = element_text(hjust = 0),
        plot.title = element_text(colour = "blue4", hjust = 0.5),
        plot.subtitle = element_text(colour = "blue4",hjust = 0.5),
        legend.title = element_text(colour = NA),
        panel.background = element_rect(fill = NA),
        plot.background = element_rect(fill = "white",colour = NA),
        legend.background = element_rect(fill = "white"),
        legend.direction = "horizontal",
        legend.key = element_rect(fill="white"),
        axis.text.x   = element_text(colour = "grey0"
                                      ,size = 8, angle = 90
                                      ,hjust = 1, vjust = 1));plot_eee_eof
```

(*) En el caso de la EOF, considera la encuesta de la primera quincena de cada mes hasta enero del 2018. Desde febrero de ese 
año, considera la última encuesta publicada en el mes, incluyendo la previa a la Reunión de Política Monetaira de diciembre 2021. En los meses en los que no se publica encuesta, se considera la última encuesta disponible. En el caso de la EEE, considera la encuesta publicada en diciembre de 2021.

```{r echo=FALSE, results=FALSE, message=FALSE, warning=FALSE}
q <- ipc_tpm_long %>% 
  ggplot(aes(x = Periodo, y = value, col = variable)) +
  geom_line(linetype = 'solid') +
  labs(x='', y = 'Porcentaje (%)',
       title = 'Inflación y Tasa de política monetaria',
       subtitle = paste0("enero 2008 - ",mm1," ", yy),
       caption = 'Fuente: Elaboración propia utilizando datos del INE y BCCh.') +
  transition_reveal(reveal_time) +
  scale_y_continuous(breaks = scales::breaks_width(2)) +
  scale_x_date(date_breaks = "3 months",
               limits = c(min(ipc_tpm_long$Periodo),
                          max = max(ipc_tpm_long$Periodo))) + 
               #date_labels = "%Y") + 
  scale_color_manual(name = "Variables"
                     ,labels = c("IPC total", "TPM")
    ,values = c('royalblue3','orangered3')) + 
  theme_light() + 
  theme(panel.grid.major.x = element_blank(),
        panel.grid.minor.x = element_blank(),
        panel.grid.major.y = element_line(linetype="dashed"),
        panel.grid.minor.y = element_line(linetype="dashed"),
        legend.position = "bottom",
        legend.justification = "center",
        plot.caption = element_text(hjust = 0),
        plot.title = element_text(colour = "blue4", hjust = 0.5),
        plot.subtitle = element_text(colour = "blue4",hjust = 0.5),
        legend.title = element_text(colour = NA),
        panel.background = element_rect(fill = NA),
        plot.background = element_rect(fill = "white",colour = NA),
        legend.background = element_rect(fill = "white"),
        legend.direction = "horizontal",
        legend.key = element_rect(fill="white"),
        axis.text.x   = element_text(colour = "grey0"
                                      ,size = 8, angle = 90
                                      ,hjust = 1, vjust = 1))

animate(q, duration = 5, fps = 20
        , width = 500, height = 500
        , renderer = gifski_renderer())

anim_save("inflation_tpm_chile.gif")

```


