panel.background = element_rect(fill = NA),
plot.background = element_rect(fill = "white",colour = NA),
legend.background = element_rect(fill = "white"),
legend.direction = "horizontal",
legend.key = element_rect(fill="white"),
axis.text.x   = element_text(colour = "grey0"
,size = 8, angle = 90
,hjust = 1, vjust = 1))
q <- ipc_tpm_long %>%
ggplot(aes(x = Periodo, y = value, col = variable)) +
geom_line(linetype = 'solid') +
labs(x='', y = 'Porcentaje (%)',
title = 'Inflación y Tasa de política monetaria',
subtitle = paste0("enero 2008 - ",mm1," ", yy),
caption = 'Fuente: Elaboración propia utilizando datos del INE y BCCh.') +
transition_reveal(reveal_time) +
scale_y_continuous(breaks = scales::breaks_width(2)) +
scale_x_date(date_breaks = "12 months",
limits = c(min(ipc_tpm_long$Periodo),
max = max(ipc_tpm_long$Periodo))) +
#date_labels = "%Y") +
scale_color_manual(name = "Variables"
,labels = c("IPC total", "TPM")
,values = c('royalblue3','orangered3')) +
theme_light() +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_line(linetype="dashed"),
panel.grid.minor.y = element_line(linetype="dashed"),
legend.position = "bottom",
legend.justification = "center",
plot.caption = element_text(hjust = 0),
plot.title = element_text(colour = "blue4", hjust = 0.5),
plot.subtitle = element_text(colour = "blue4",hjust = 0.5),
legend.title = element_text(colour = NA),
panel.background = element_rect(fill = NA),
plot.background = element_rect(fill = "white",colour = NA),
legend.background = element_rect(fill = "white"),
legend.direction = "horizontal",
legend.key = element_rect(fill="white"),
axis.text.x   = element_text(colour = "grey0"
,size = 8, angle = 90
,hjust = 1, vjust = 1))
# Asignando show_time & reveal_time
ipc_tpm <- ipc_tpm  %>%
mutate(show_time = ifelse((Y == 2020 & m %in% c(3:12))
| Y == 2021, 15, 1),
reveal_time = cumsum(show_time))
# Uniendo bases desde el periodo que se encuentran y hasta donde llegan
ipc_tpm <- ipc %>%
inner_join(tpm, by = c("Periodo")) %>%
mutate(Y = as.numeric(ano),
m = as.numeric(mes)) %>%
select(-c(ano, mes)) %>%
filter(Periodo > '2020-01-01')
View(ipc_tpm)
View(l_pi_tpm)
l_ipc_m <- l_pi_tpm$var_mensual
#  Seteo inicial
rm(list = ls())
memory.size(max = T)
# Actualizar parametros
mm1 <- "enero"
mm2 <- "1"
yy  <- "2022"
# Nombre bases de datos
url <- "https://www.ine.cl/docs/default-source/%C3%ADndice-de-precios-al-consumidor/cuadros-estadisticos/base-2018/series-de-tiempo/ipc.xls.xlsx?sfvrsn=c73e33d4_10"
dest <- "datos/pi.xlsx"
download.file(url=url,destfile = dest,mode = "wb")
pi  <- "pi.xlsx"
tpm <- "tpm.xlsx"
# Inflación variación anual 12 meses
pi <- read_excel(paste0("datos/",pi)) %>%
janitor::clean_names()
pi <- pi[-c(1:3),]
# d: división, g: grupo, c: clase, sc: subclase, p: producto
colnames(pi) <- c("ano", "mes", "d", "g", "c", "sc", "p", "glosa",
"ponderacion", "indice", "var_mensual", "var_acumulada",
"var_12_meses", "inc_mensual", "inc_acumulada", "inc_12_meses")
pi <- pi %>%
mutate(ponderacion = as.numeric(ponderacion),
indice      = as.numeric(indice),
var_mensual = as.numeric(var_mensual),
var_acumulada = as.numeric(var_acumulada),
var_12_meses  = as.numeric(var_12_meses),
inc_mensual   = as.numeric(inc_mensual),
inc_acumulada = as.numeric(inc_acumulada),
inc_12_meses  = as.numeric(inc_12_meses),
Periodo = as.Date(paste0(ano,"-", mes,"-", "1"), format = '%Y-%m-%d'))
ipc <- pi %>%
filter(glosa == 'IPC General')
# Inflación variación anual 12 meses
pi <- read_excel(paste0("datos/",pi)) %>%
janitor::clean_names()
# Tasa de Politica Monetaria Mensual
tpm <- read_excel(paste0("datos/",tpm)) %>%
janitor::clean_names()
tpm <- tpm[-1,c(1:2)]
colnames(tpm) <- c('Periodo', 'TPM')
tpm <- tpm  %>%
mutate(TPM     = round(as.numeric(TPM), 2),
Periodo = as.Date(Periodo, format = '%Y-%m-%d'))
# Uniendo bases desde el periodo que se encuentran y hasta donde llegan
ipc_tpm <- ipc %>%
inner_join(tpm, by = c("Periodo")) %>%
mutate(Y = as.numeric(ano),
m = as.numeric(mes)) %>%
select(-c(ano, mes)) %>%
filter(Periodo > '2020-01-01')
# Asignando show_time & reveal_time
ipc_tpm <- ipc_tpm  %>%
mutate(show_time = ifelse((Y == 2020 & m %in% c(3:12))
| Y == 2021, 15, 1),
reveal_time = cumsum(show_time))
# Reshape de base pi_tpm
ipc_tpm_long <- ipc_tpm %>%
select(Periodo, var_12_meses, TPM, reveal_time) %>%
melt(id.vars = c("Periodo", "reveal_time"))
#  Seteo inicial
rm(list = ls())
memory.size(max = T)
# Actualizar parametros
mm1 <- "enero"
mm2 <- "1"
yy  <- "2022"
# Nombre bases de datos
url <- "https://www.ine.cl/docs/default-source/%C3%ADndice-de-precios-al-consumidor/cuadros-estadisticos/base-2018/series-de-tiempo/ipc.xls.xlsx?sfvrsn=c73e33d4_10"
dest <- "datos/pi.xlsx"
download.file(url=url,destfile = dest,mode = "wb")
pi  <- "pi.xlsx"
tpm <- "tpm.xlsx"
# Inflación variación anual 12 meses
pi <- read_excel(paste0("datos/",pi)) %>%
janitor::clean_names()
pi <- pi[-c(1:3),]
# d: división, g: grupo, c: clase, sc: subclase, p: producto
colnames(pi) <- c("ano", "mes", "d", "g", "c", "sc", "p", "glosa",
"ponderacion", "indice", "var_mensual", "var_acumulada",
"var_12_meses", "inc_mensual", "inc_acumulada", "inc_12_meses")
pi <- pi %>%
mutate(ponderacion = as.numeric(ponderacion),
indice      = as.numeric(indice),
var_mensual = as.numeric(var_mensual),
var_acumulada = as.numeric(var_acumulada),
var_12_meses  = as.numeric(var_12_meses),
inc_mensual   = as.numeric(inc_mensual),
inc_acumulada = as.numeric(inc_acumulada),
inc_12_meses  = as.numeric(inc_12_meses),
Periodo = as.Date(paste0(ano,"-", mes,"-", "1"), format = '%Y-%m-%d'))
ipc <- pi %>%
filter(glosa == 'IPC General')
# Tasa de Politica Monetaria Mensual
tpm <- read_excel(paste0("datos/",tpm)) %>%
janitor::clean_names()
tpm <- tpm[-1,c(1:2)]
colnames(tpm) <- c('Periodo', 'TPM')
tpm <- tpm  %>%
mutate(TPM     = round(as.numeric(TPM), 2),
Periodo = as.Date(Periodo, format = '%Y-%m-%d'))
# Uniendo bases desde el periodo que se encuentran y hasta donde llegan
ipc_tpm <- ipc %>%
inner_join(tpm, by = c("Periodo")) %>%
mutate(Y = as.numeric(ano),
m = as.numeric(mes)) %>%
select(-c(ano, mes)) %>%
filter(Periodo > '2020-01-01')
# Asignando show_time & reveal_time
ipc_tpm <- ipc_tpm  %>%
mutate(show_time = ifelse((Y == 2020 & m %in% c(3:12))
| Y == 2021, 15, 1),
reveal_time = cumsum(show_time))
# Reshape de base pi_tpm
ipc_tpm_long <- ipc_tpm %>%
select(Periodo, var_12_meses, TPM, reveal_time) %>%
melt(id.vars = c("Periodo", "reveal_time"))
# Datos
l_pi_tpm <- ipc_tpm %>%
filter(Y == yy & m == mm2)
l_pi  <- l_pi_tpm$var_12_meses
l_tpm <- l_pi_tpm$TPM
l_ipc_m <- l_pi_tpm$var_mensual
# Llave
ll_pi  <- ifelse(l_pi > 0, "aumentó", "disminuyó")
# Valor absoluto para llave
abs_l_pi  <- abs(l_pi)
abs_l_tpm <- abs(l_tpm)
View(pi)
# Informacion último mes
d_ipc <- pi %>%
filter(Ano == yy)
# Informacion último mes
d_ipc <- pi %>%
filter(Ano == "yy")
# Informacion último mes
d_ipc <- pi %>%
filter(ano == "yy")
# Informacion último mes
d_ipc <- pi %>%
mutate(ano = as.numeric(ano),
mes = as.numeric(mes|))
# Informacion último mes
d_ipc <- pi %>%
mutate(ano = as.numeric(ano),
mes = as.numeric(mes))
# Informacion último mes
d_ipc <- pi %>%
mutate(ano = as.numeric(ano),
mes = as.numeric(mes)) %>%
filter(ano == "yy")
View(d_ipc)
d_ipc <- pi %>%
mutate(ano = as.numeric(ano),
mes = as.numeric(mes))
View(d_ipc)
# Informacion último mes
d_ipc <- pi %>%
mutate(ano = as.numeric(ano),
mes = as.numeric(mes)) %>%
filter(ano == yy)
View(d_ipc)
# Informacion último mes
d_ipc <- pi %>%
mutate(ano = as.numeric(ano),
mes = as.numeric(mes)) %>%
filter(ano == yy & mes == mm2)
View(d_ipc)
# Informacion último mes
d_ipc <- pi %>%
mutate(ano = as.numeric(ano),
mes = as.numeric(mes)) %>%
filter(ano == yy & mes == mm2) %>%
filter(!is.na(p))
View(pi)
d_ipc <- pi %>%
mutate(ano = as.numeric(ano),
mes = as.numeric(mes)) %>%
filter(ano == yy & mes == mm2)
# Informacion último mes
d_ipc <- pi %>%
mutate(ano = as.numeric(ano),
mes = as.numeric(mes)) %>%
filter(ano == yy & mes == mm2) %>%
filter(!is.na(p) & !is.na(sc))
# Informacion último mes
d_ipc <- pi %>%
mutate(ano = as.numeric(ano),
mes = as.numeric(mes)) %>%
filter(ano == yy & mes == mm2) %>%
filter(!is.na(p) & !is.na(sc) & !is.na(c))
# Informacion último mes
d_ipc <- pi %>%
mutate(ano = as.numeric(ano),
mes = as.numeric(mes)) %>%
filter(ano == yy & mes == mm2) %>%
filter(!is.na(p))
# Informacion último mes
d_ipc <- pi %>%
mutate(ano = as.numeric(ano),
mes = as.numeric(mes)) %>%
filter(ano == yy & mes == mm2)
# Informacion último mes
d_ipc <- pi %>%
mutate(ano = as.numeric(ano),
mes = as.numeric(mes)) %>%
filter(ano == yy & mes == mm2) %>%
filter(!is.na(g))
# Informacion último mes
d_ipc <- pi %>%
mutate(ano = as.numeric(ano),
mes = as.numeric(mes)) %>%
filter(ano == yy & mes == mm2)
View(pi)
# Informacion último mes
d_ipc <- pi %>%
filter(!is.na(p))
View(d_ipc)
# Informacion último mes
d_ipc <- pi %>%
filter(!is.na(g))
View(d_ipc)
# Informacion último mes
d_ipc <- pi %>%
filter(!is.na(p))
View(d_ipc)
View(pi)
# Informacion último mes
d_ipc <- pi %>%
mutate(ano = as.numeric(ano),
mes = as.numeric(mes)) %>%
filter(ano == yy & mes == mm2) %>%
filter(glosa = "ALIMENTOS Y BEBIDAS NO ALCOHÓLICAS")
# Informacion último mes
d_ipc <- pi %>%
mutate(ano = as.numeric(ano),
mes = as.numeric(mes)) %>%
filter(ano == yy & mes == mm2) %>%
filter(glosa =="ALIMENTOS Y BEBIDAS NO ALCOHÓLICAS")
View(d_ipc)
d_ipc <- pi %>%
mutate(ano = as.numeric(ano),
mes = as.numeric(mes)) %>%
filter(ano == yy & mes == mm2)
View(d_ipc)
# Informacion último mes
d_ipc <- pi %>%
mutate(ano = as.numeric(ano),
mes = as.numeric(mes)) %>%
filter(ano == yy & mes == mm2) %>%
filter(glosa == "ALIMENTOS Y BEBIDAS NO ALCOHÓLICAS" |
glosa == "BEBIDAS ALCOHÓLICAS Y TABACO")
# Informacion último mes
d_ipc <- pi %>%
mutate(ano = as.numeric(ano),
mes = as.numeric(mes)) %>%
filter(ano == yy & mes == mm2) %>%
filter(glosa == "ALIMENTOS Y BEBIDAS NO ALCOHÓLICAS" |
glosa == "BEBIDAS ALCOHÓLICAS Y TABACO" |
glosa == "VESTUARIO Y CALZADO" |
glosa == "VIVIENDA Y SERVICIOS BÁSICOS" |
glosa == "EQUIPAMIENTO Y MANTENCIÓN DEL HOGAR" |
glosa == "SALUD" |
glosa == "TRANSPORTE" |
glosa == "COMUNICACIONES" |
glosa == "RECREACIÓN Y CULTURA" |
glosa == "EDUCACIÓN" |
glosa == "RESTAURANTES Y HOTELES" |
glosa == "BIENES Y SERVICIOS DIVERSOS")
View(d_ipc)
# Informacion último mes
d_ipc <- pi %>%
mutate(ano = as.numeric(ano),
mes = as.numeric(mes)) %>%
filter(ano == yy & mes == mm2) %>%
filter(glosa == "ALIMENTOS Y BEBIDAS NO ALCOHÓLICAS" |
glosa == "BEBIDAS ALCOHÓLICAS Y TABACO" |
glosa == "VESTUARIO Y CALZADO" |
glosa == "VIVIENDA Y SERVICIOS BÁSICOS" |
glosa == "EQUIPAMIENTO Y MANTENCIÓN DEL HOGAR" |
glosa == "SALUD" |
glosa == "TRANSPORTE" |
glosa == "COMUNICACIONES" |
glosa == "RECREACIÓN Y CULTURA" |
glosa == "EDUCACIÓN" |
glosa == "RESTAURANTES Y HOTELES" |
glosa == "BIENES Y SERVICIOS DIVERSOS") %>%
mutate(case_when(glosa == "ALIMENTOS Y BEBIDAS NO ALCOHÓLICAS" ~ "alimentos y bebidas no alcohólicas" ))
# Informacion último mes
d_ipc <- pi %>%
mutate(ano = as.numeric(ano),
mes = as.numeric(mes)) %>%
filter(ano == yy & mes == mm2) %>%
filter(glosa == "ALIMENTOS Y BEBIDAS NO ALCOHÓLICAS" |
glosa == "BEBIDAS ALCOHÓLICAS Y TABACO" |
glosa == "VESTUARIO Y CALZADO" |
glosa == "VIVIENDA Y SERVICIOS BÁSICOS" |
glosa == "EQUIPAMIENTO Y MANTENCIÓN DEL HOGAR" |
glosa == "SALUD" |
glosa == "TRANSPORTE" |
glosa == "COMUNICACIONES" |
glosa == "RECREACIÓN Y CULTURA" |
glosa == "EDUCACIÓN" |
glosa == "RESTAURANTES Y HOTELES" |
glosa == "BIENES Y SERVICIOS DIVERSOS") %>%
mutate(glosa = case_when(glosa == "ALIMENTOS Y BEBIDAS NO ALCOHÓLICAS" ~ "alimentos y bebidas no alcohólicas" ))
# Informacion último mes
d_ipc <- pi %>%
mutate(ano = as.numeric(ano),
mes = as.numeric(mes)) %>%
filter(ano == yy & mes == mm2) %>%
filter(glosa == "ALIMENTOS Y BEBIDAS NO ALCOHÓLICAS" |
glosa == "BEBIDAS ALCOHÓLICAS Y TABACO" |
glosa == "VESTUARIO Y CALZADO" |
glosa == "VIVIENDA Y SERVICIOS BÁSICOS" |
glosa == "EQUIPAMIENTO Y MANTENCIÓN DEL HOGAR" |
glosa == "SALUD" |
glosa == "TRANSPORTE" |
glosa == "COMUNICACIONES" |
glosa == "RECREACIÓN Y CULTURA" |
glosa == "EDUCACIÓN" |
glosa == "RESTAURANTES Y HOTELES" |
glosa == "BIENES Y SERVICIOS DIVERSOS") %>%
mutate(glosa = case_when(glosa == "ALIMENTOS Y BEBIDAS NO ALCOHÓLICAS" ~ "alimentos y bebidas no alcohólicas",
glosa == "BEBIDAS ALCOHÓLICAS Y TABACO" ~ "bebidas alcohólicas y tabaco",
glosa == "VESTUARIO Y CALZADO" ~ "vestuario y calzado",
glosa == "VIVIENDA Y SERVICIOS BÁSICOS" ~ "vivienda y servicios básicos",
glosa == "EQUIPAMIENTO Y MANTENCIÓN DEL HOGAR" ~ "equipamiento y mantención del hogar",
glosa == "SALUD" ~ "salud",
glosa == "TRANSPORTE" ~ "transporte",
glosa == "COMUNICACIONES" ~ "comunicaciones",
glosa == "RECREACIÓN Y CULTURA" ~ "recreacion y cultura",
glosa == "EDUCACIÓN" ~ "educación",
glosa == "RESTAURANTES Y HOTELES" ~ "restaurantes y hoteles",
glosa == "BIENES Y SERVICIOS DIVERSOS" ~ "bienes y servicios diversos"))
inc_pos <- count(d_ipc$inc_acumulada > 0)
inc_pos <- count(d_ipc$inc_acumulada > 0)
inc_pos <- count(d_ipc$inc_acumulada > 0, na.rm = TRUE)
inc_pos <- sum(d_ipc$inc_acumulada > 0, na.rm = TRUE)
inc_neg <- sum(d_ipc$inc_acumulada < 0, na.rm = TRUE)
ll_inc_pos <- case_when(inc_pos = 11 ~ "once")
ll_inc_pos <- case_when(inc_pos == "11" ~ "once")
inc_pos <- sum(d_ipc$inc_acumulada > 0, na.rm = TRUE)
inc_neg <- sum(d_ipc$inc_acumulada < 0, na.rm = TRUE)
ll_inc_pos <- case_when(inc_pos == "1" ~ "una", inc_pos == "2" ~ "dos",
inc_pos == "3" ~ "tres", inc_pos == "4" ~ "cuatro",
inc_pos == "5" ~ "cinco", inc_pos == "6" ~ "seis",
inc_pos == "7" ~ "siete", inc_pos == "8" ~ "ocho",
inc_pos == "9" ~ "nueve", inc_pos == "9" ~ "nueve",
inc_pos == "11" ~ "once", inc_pos == "12" ~ "doce")
ll_inc_neg <- case_when(inc_neg == "1" ~ "una", inc_neg == "2" ~ "dos",
inc_neg == "3" ~ "tres", inc_neg == "4" ~ "cuatro",
inc_neg == "5" ~ "cinco", inc_neg == "6" ~ "seis",
inc_neg == "7" ~ "siete", inc_neg == "8" ~ "ocho",
inc_neg == "9" ~ "nueve", inc_neg == "9" ~ "nueve",
inc_neg == "11" ~ "once", inc_neg == "12" ~ "doce")
sort_d_ipc <- d_ipc %>%
arrange(var_mensual)
View(sort_d_ipc)
sort_d_ipc <- d_ipc %>%
arrange(desc(var_mensual))
glosa1 <- sort_d_ipc$glosa
glosa1
glosa1 <- sort_d_ipc$glosa[1,]
glosa1 <- sort_d_ipc$glosa[1,1]
glosa1 <- sort_d_ipc[1,1]
View(glosa1)
glosa1 <- sort_d_ipc$glosa
glosa1
glosas <- sort_d_ipc$glosa
glosa1 <- glosas[1,]
glosa1 <- glosas[1,1]
glosa1 <- glosas[,]
sort_d_ipc <- d_ipc %>%
arrange(desc(var_mensual))
View(sort_d_ipc)
glosas
glosas <- sort_d_ipc$glosa
glosa1 <- glosas[1]
glosa2 <- glosas[2]
glosa1
glosa2
var_mensual <- sort_d_ipc$var_mensual
var_mensual1 <- var_mensual[1]
var_mensual2 <- var_mensual[2]
pp  <- sort_d_ipc$inc_acumulada
pp1 <- pp[1]
pp2 <- pp[2]
sum_pp_t <- sum(sort_d_ipc$inc_acumulada)
sum_pp   <- sum_pp_t - pp1 - pp2
sum_pp_t <- ifelse(sort_d_ipc$inc_acumulada > 0, sum(inc_acumulada), 0)
sum_pp_t <- ifelse(sort_d_ipc$inc_acumulada > 0, sum(sort_d_ipc$inc_acumulada), 0)
sum_pp   <- sum_pp_t - pp1 - pp2
pp  <- sort_d_ipc$inc_mensual
pp1 <- pp[1]
pp2 <- pp[2]
sum_pp_t <- ifelse(sort_d_ipc$inc_mensual > 0, sum(sort_d_ipc$inc_mensual), 0)
sum_pp   <- sum_pp_t - pp1 - pp2
sum_pp_t <- ifelse(sort_d_ipc$inc_mensual > 0, sum(sort_d_ipc$inc_mensual), 0)
sum_pp_t
sum_pp_t <- ifelse(sort_d_ipc$inc_mensual > 0, sum(sort_d_ipc$inc_mensual), 0)
pp  <- sort_d_ipc$inc_mensual
pp1 <- pp[1]
pp2 <- pp[2]
sum_pp_t <- ifelse(sort_d_ipc$inc_mensual > 0, sum(sort_d_ipc$inc_mensual), 0)
sum_pp   <- sum_pp_t - pp1 - pp2
sum_pp
sum_pp_t <- ifelse(sort_d_ipc$inc_acumulada > 0, sum(sort_d_ipc$inc_acumulada), 0)
pp  <- sort_d_ipc$inc_mensual
pp1 <- pp[1]
pp2 <- pp[2]
inc_tot_pos <- ifelse(sort_d_ipc$inc_mensual > 0, sum(sort_d_ipc$inc_mensual), 0)
inc_tot_pos
inc_tot     <- inc_tot_pos - pp1 - pp2
inc_tot
inc_tot     <- inc_tot[12]
inc_tot
inc_tot     <- inc_tot*-1
# Presentando tabla
tab <- d_ipc %>%
select(d, ponderacion, indice, var_mensual, var_acumulada, var_12_meses, inc_mensual, inc_12_meses)
View(tab)
# Presentando tabla
tab <- d_ipc %>%
select(glosa, ponderacion, indice, var_mensual, var_acumulada, var_12_meses, inc_mensual, inc_12_meses)
# Presentando tabla
tab <- d_ipc %>%
select(glosa, ponderacion, indice, var_mensual, var_acumulada, var_12_meses, inc_mensual, inc_12_meses)
colnames(tab) <- c("División", "Ponderación",  "Índice", "Variación mensual", "Variación acumulada", "Variación 12 meses",
"Incidencia mensual", "Incidencia 12 meses")
pp  <- sort_d_ipc$inc_mensual
sort_d_ipc <- d_ipc %>%
arrange(desc(inc_mensual))
glosas <- sort_d_ipc$glosa
glosa1 <- glosas[1]
glosa2 <- glosas[2]
var_mensual  <- sort_d_ipc$var_mensual
var_mensual  <- sort_d_ipc$inc_mensual
var_mensual1 <- var_mensual[1]
var_mensual2 <- var_mensual[2]
pp  <- sort_d_ipc$inc_mensual
pp1 <- pp[1]
pp2 <- pp[2]
var_mensual  <- sort_d_ipc$var_mensual
var_mensual1 <- var_mensual[1]
var_mensual2 <- var_mensual[2]
pp  <- sort_d_ipc$inc_mensual
pp1 <- pp[1]
pp2 <- pp[2]
inc_tot_pos <- ifelse(sort_d_ipc$inc_mensual > 0, sum(sort_d_ipc$inc_mensual), 0)
inc_tot_pos <- ifelse(sort_d_ipc$inc_mensual > 0, sum(sort_d_ipc$inc_mensual), 0);inc_tot_pos
inc_tot     <- inc_tot_pos - pp1 - pp2;inc_tot
inc_tot     <- inc_tot[12]
inc_tot     <- inc_tot[12];inc_tot
